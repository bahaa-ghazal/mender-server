name: acceptance

services:
  acceptance-tester:
    extends:
      file: ../../../tests/docker-compose.yml
      service: acceptance-tester
    command: # FIXME(QA-733): Align dockerfile with open source
      - -k
      - not test_create_artifacts
    volumes:
      - ".:/testing"
    depends_on:
      mmock:
        condition: service_started
      workflows:
        condition: service_started
      workflows-worker:
        condition: service_started

  mongo:
    extends:
      file: ../../../../docker-compose.yml
      service: mongo

  nats:
    extends:
      file: ../../../../docker-compose.yml
      service: nats

  mmock:
    image: jordimartin/mmock:v2.7.6
    command:
      [
        "-server-ip",
        "0.0.0.0",
        "-console-ip",
        "0.0.0.0",
        "-server-port",
        "8080",
      ]
    ports:
      - 8082:8082
    volumes:
      - "./mmock:/config"
    networks:
      default:
        aliases:
          - mender-deployments
          - mender-device-auth
          - mender-inventory
          - mender-tenantadm
          - mender-useradm
          - mender-deviceconnect
          - mender-deviceconfig
          - mender-reporting
          - mender-iot-manager
          - mmock

  workflows-worker:
    extends:
      file: ../../../../docker-compose.yml
      service: workflows-worker
    image: ${MENDER_IMAGE_REGISTRY:-docker.io}/${MENDER_IMAGE_REPOSITORY:-mendersoftware}/workflows:${MENDER_IMAGE_TAG_TEST:-test}
    command: ["worker"]
    user: ${UID:-0}:${GID:-0}
    volumes:
      - ".:/testing"
      - "../worker/workflows:/etc/workflows/definitions"
      - ${GOCOVERDIR:-../../../test/cover}:/cover
    working_dir: /testing
    environment:
      AWS_ACCESS_KEY_ID: "minio"
      AWS_SECRET_ACCESS_KEY: "minio123"
      AWS_URL: "http://minio:9000"
      BUCKET: "mender"
      HAVE_DEVICECONNECT: 1
      HAVE_DEVICECONFIG: 1
      GOCOVERDIR: /cover
      DEPLOYMENTS_ADDR: "mender-deployments:8080"
      DEVICEAUTH_ADDR: "mender-device-auth:8080"
      INVENTORY_ADDR: "mender-inventory:8080"
      TENANTADM_ADDR: "mender-tenantadm:8080"
      USERADM_ADDR: "mender-useradm:8080"
      DEVICECONNECT_ADDR: "mender-deviceconnect:8080"
      DEVICECONFIG_ADDR: "mender-deviceconfig:8080"
      REPORTING_ADDR: "mender-reporting:8080"
      IOT_MANAGER_ADDR: "mender-iot-manager:8080"
    restart: always
    depends_on:
      mongo:
        condition: service_started

  workflows:
    extends:
      file: ../../../../docker-compose.yml
      service: workflows
    image: ${MENDER_IMAGE_REGISTRY:-docker.io}/${MENDER_IMAGE_REPOSITORY:-mendersoftware}/workflows:${MENDER_IMAGE_TAG_TEST:-test}
    ports:
      - "8080:8080"
    environment:
      GOCOVERDIR: /cover
    user: ${UID:-0}:${GID:-0}
    volumes:
      - ${GOCOVERDIR:-../../../test/cover}:/cover
    working_dir: /testing
    networks:
      default:
        aliases:
          - mender-workflows-server
          - workflows-server
    restart: always
    depends_on:
      mongo:
        condition: service_started
      nats:
        condition: service_started

volumes:
  mongo: {}
