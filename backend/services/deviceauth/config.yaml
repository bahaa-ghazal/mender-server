# API server listen address
# Defauls to: ":8080" which will listen on all avalable interfaces.
# Overwrite with environment variable: DEVICEAUTH_LISTEN

# listen: :8080

# HTTP Server middleware environment
# Available values:
#   dev - development environment
#   prod - production environment
# Defaults to: prod
# Overwrite with environment variable: DEVICEAUTH_MIDDLEWARE

# middleware: dev

# Mongodb connection string
# Defaults to: mongo-device-auth
# Overwrite with environment variable: DEVICEAUTH_MONGO

# mongo: mongo-device-auth

# Enable SSL for mongo connections
# Defaults to: false
# Overwrite with environment variable: DEVICEAUTH_MONGO_SSL

# mongo_ssl: false

# SkipVerify controls whether a mongo client verifies the
# server's certificate chain and host name.
# If InsecureSkipVerify is true, accepts any certificate
# presented by the server and any host name in that certificate.
# Defaults to: false
# Overwrite with environment variable: DEVICEAUTH_MONGO_SSL_SKIPVERIFY

# mongo_ssl_skipverify: false

# Mongodb username
# Overwrites username set in connection string.
# Defaults to: none
# Overwrite with environment variable: DEVICEAUTH_MONGO_USERNAME

# mongo_username: user

# Mongodb password
# Overwrites password set in connection string.
# Defaults to: none
# Overwrite with environment variable: DEVICEAUTH_MONGO_PASSWORD

# mongo_password: secret

# Workflows service address
# Defaults to: http://mender-workflows-server:8080
# Overwrite with environment variable: DEVICEAUTH_ORCHESTRATOR_ADDR

# orchestrator_addr:  http://mender-workflows-server:8080

# Enable the integration with the reporting service
# Defaults to: false
# Overwrite with environment variable: DEVICEAUTH_ENABLE_REPORTING

# enable_reporting: false

# Tenant administration service address (optional)
# Defaults to: none
# Overwrite with environment variable: DEVICEAUTH_TENANTADM_ADDR

# tenantadm_addr:  http://tenantadm

# Default tenant token, for devices that don't supply one (optional)
# Defaults to: none
# Overwrite with environment variable: DEVICEAUTH_DEFAULT_TENANT_TOKEN

# default_tenant_token:  <VALID_TENANT_TOKEN>

# Private key path - used for JWT signing
# Defaults to: /etc/deviceauth/rsa/private.pem
# Overwrite with environment variable: DEVICEAUTH_SERVER_PRIV_KEY_PATH

# server_priv_key_path: /etc/deviceauth/rsa/private.pem

# Fallback private key path - used for JWT verification
# Defaults to: none
# Overwrite with environment variable: DEVICEAUTH_SERVER_FALLBACK_PRIV_KEY_PATH

# server_fallback_priv_key_path: /etc/deviceauth/rsa/private-fallback.pem

# JWT issuer ('iss' claim)
# Defaults to: Mender

# jwt_issuer: Mender

# JWT expiration in seconds ('exp' claim)
# Defaults to: "604800" (one week)

# jwt_exp_timeout: 604800

# Redis connection string
#
# connectionString URL format:
# Standalone mode:
# (redis|rediss|unix)://[<user>:<password>@](<host>|<socket path>)[:<port>[/<db_number>]][?option=value]
# Cluster mode:
# (redis|rediss|unix)[+srv]://[<user>:<password>@]<host1>[,<host2>[,...]][:<port>][?option=value]
#
# The following query parameters are also available:
# client_name         string
# conn_max_idle_time  duration
# conn_max_lifetime   duration
# dial_timeout        duration
# max_idle_conns      int
# max_retries         int
# max_retry_backoff   duration
# min_idle_conns      int
# min_retry_backoff   duration
# pool_fifo           bool
# pool_size           int
# pool_timeout        duration
# protocol            int
# read_timeout        duration
# tls                 bool
# write_timeout       duration
#
# Defaults to: "", which disables the Redis cache
# Overwrite with environment variable: DEVICEAUTH_REDIS_CONNECTION_STRING
# redis_connection_string: ""

# Redis key prefix
# Defaults to: "deviceauth:v1"
# Overwrite with environment variable: DEVICEAUTH_REDIS_KEY_PREFIX
# redis_key_prefix: ""

# Redis cache expiration(sec)
# Defaults to: 1800 (30mins)
# Overwrite with environment variable: DEVICEAUTH_REDIS_CACHE_EXPIRE_SEC
# redis_cache_expire_sec: "1800"

# Redis address
#
# Deprecated. Use redis_connection_string instead.
#
# Defaults to: "", which disables the Redis cache
# Overwrite with environment variable: DEVICEAUTH_REDIS_ADDR
# redis_addr: ""

# Redis tenant/device limits expiration(sec)
# Defaults to: 1800 (30mins)
# Overwrite with environment variable: DEVICEAUTH_REDIS_LIMITS_EXPIRE_SEC
# redis_limits_expire_sec: "1800"

#    Enable addon feature restrictions.
#    Defaults to: false
#    Overwrite with environment variable: DEVICEAUTH_HAVE_ADDONS
# have_addons: false

# ratelimits:
#   # auth configures ratelimits for authenticated requests.
#   auth:
#     # enable rate limiting also requires redis_connection_string to be effective.
#     enable: false
#     # reject_unmatched rejects requests that does not resolve to a
#     # ratelimit group. That is, if either there's no api_pattern matching
#     # the request or if the group_expression does not match a group.
#     # Defaults to false - disable ratelimiting for unmatched requests.
#     reject_unmatched: false
#     # groups specify rate limiting groups that overrides the parameters in the
#     # default group.
#     groups:
#         # name defines the name of the group. The name is used in
#         # match.group_expression to match an api_pattern with a group.
#       - name: default
#         # interval is the time interval when the rate limiter resets.
#         interval: 1m
#         # quota is the number of requests allowed in an interval.
#         quota: 300
#         # event_expression is a go template for grouping requests.
#         # The following attributes are available in the context:
#         # Identity - contains a subset of the JWT claims:
#         # .Subject  (jwt:"sub")          string
#         # .Tenant   (jwt:"mender.tenant") string
#         # .Plan     (jwt:"mender.plan")   string
#         # .Addons   (jwt:"mender.addons") []struct{Enabled bool; Name string}
#         # .IsUser   (jwt:"mender.user")   bool
#         # .IsDevice (jwt:"mender.device") bool
#         # .Trial    (jwt:"mender.trial")  bool
#         event_expression: "{{with .Identity}}{{.Subject}}{{end}}"
#         # More example groups:
#     # - name: "example_slow_group_by_tenant"
#     #   quota: 1
#     #   interval: 30s
#     #   event_expression: "{{with .Identity}}{{.Tenant}}{{end}}"
#     # match specifies matching expressions for mapping API requests to rate
#     # limiting groups.
#     match:
#         # api_pattern specifies an API path pattern as defined by http.ServeMux
#         # https://pkg.go.dev/net/http#hdr-Patterns-ServeMux
#       - api_pattern: /
#         # group_expression defines  the group for this matching expression.
#         # A group can be selected dynamically using Go templates or statically
#         # with a literal string.
#         # See group.event_expression for template context attributes.
#         group_expression: "default"
#         # More example match rules:
#     # - api_pattern: /api/devices/v1/deployments/expample/slow/api/
#     #   group_expression: "example_slow_group_by_tenant"
#     # - api_pattern: /api/devices/v2/devauth/expample/slow/api/
#     #   group_expression: >
#     #     {{-if .Identity.Trial-}}
#     #     example_slow_group_by_tenant
#     #     {{-else-}}
#     #     default
#     #     {{-end-}}

# Maximum allowed size for HTTP request bodies (in bytes)
# Defaults to: 1048576 (1 MiB)
# Overwrite with environment variable: DEVICEAUTH_REQUEST_SIZE_LIMIT

# request_size_limit: 1048576
