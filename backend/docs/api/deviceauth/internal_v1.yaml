openapi: 3.0.0
info:
  version: 0.1.0
  title: Device Authentication
  description: 'An API for device authentication handling. Not exposed via the API
    Gateway, internal use only.'
tags:
  - name: Internal API
paths:
  /api/internal/v1/devauth/alive:
    get:
      operationId: DeviceAuth Internal Check Liveliness
      tags:
      - Internal API
      summary: 'Trivial endpoint that unconditionally returns an empty 204 response
        whenever the API handler is running correctly.'
      responses:
        '204':
          description: Service is up and running
        '500':
          $ref: ../common/responses.yaml#/components/responses/InternalServerError
  /api/internal/v1/devauth/health:
    get:
      operationId: DeviceAuth Internal Check Health
      tags:
      - Internal API
      summary: Check the health of the service
      responses:
        '204':
          description: 'Service is healthy and all dependencies are up and running.'
        '500':
          $ref: ../common/responses.yaml#/components/responses/InternalServerError
        '503':
          description: 'Service unhealthy / not ready to accept traffic. At least
            one dependency is not running.'
          content:
            application/json:
              schema:
                $ref: ../common/schemas.yaml#/components/schemas/Error
              examples:
                example2:
                  value:
                    error: 'error reaching MongoDB: context deadline exceeded'
                    request_id: ffd712be-d697-4cb7-814b-88ff1e2eb5f6
  /api/internal/v1/devauth/tokens/verify:
    post:
      operationId: DeviceAuth Internal Verify JWT
      tags:
      - Internal API
      summary: Check the validity of a token
      description: 'Besides the basic validity check, checks the token expiration
        time and user-initiated token revocation. Services which intend to use it should
        be correctly set up in the gateway''s configuration.'
      parameters:
      - name: Authorization
        in: header
        description: The token in base64-encoded form.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The token is valid.
        '400':
          $ref: '../common/responses.yaml#/components/responses/InvalidRequestError'
        '401':
          $ref: '../common/responses.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: ../common/responses.yaml#/components/responses/ForbiddenError
        '500':
          $ref: ../common/responses.yaml#/components/responses/InternalServerError
  /api/internal/v1/devauth/tokens:
    delete:
      operationId: DeviceAuth Internal Revoke Device Tokens
      tags:
      - Internal API
      summary: Delete device tokens
      description: 'This endpoint is designed to be used for device decommissioning
        and tenant account suspension purpose.
        For device decommissioning purpose both tenant_id and device_id parameters
        must be set. When both tenant_id and device_id parameters are set,
        all tokens will be deleted for device with given device_id.
        For tenant account suspension purpose only tenant_id parameter must be set.
        When device_id parameter is not set (only tenant_id parameter is set)
        all tokens for all tenant devices will be deleted.'
      parameters:
      - name: tenant_id
        in: query
        required: true
        schema:
          type: string
      - name: device_id
        in: query
        required: false
        schema:
          type: string
      responses:
        '204':
          description: Tokens deleted.
        '400':
          $ref: ../common/responses.yaml#/components/responses/InvalidRequestError
        '500':
          $ref: ../common/responses.yaml#/components/responses/InternalServerError
  /api/internal/v1/devauth/tenant/{tenant_id}/limits/max_devices:
    get:
      operationId: DeviceAuth Internal Get Device Limit
      tags:
      - Internal API
      summary: Max device count limit
      parameters:
      - name: tenant_id
        description: Tenant ID.
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: ./management_v2.yaml#/components/schemas/Limit
        '400':
          $ref: ../common/responses.yaml#/components/responses/InvalidRequestError
        '500':
          $ref: ../common/responses.yaml#/components/responses/InternalServerError
    put:
      operationId: DeviceAuth Internal Update Device Limit
      tags:
      - Internal API
      summary: Update max device count limit
      parameters:
      - name: tenant_id
        description: Tenant ID.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ./management_v2.yaml#/components/schemas/Limit
      responses:
        '204':
          description: Limit information updated.
        '400':
          $ref: '../common/responses.yaml#/components/responses/InvalidRequestError'
        '500':
          $ref: '../common/responses.yaml#/components/responses/InternalServerError'
    delete:
      operationId: DeviceAuth Internal Clear Device Limit
      tags:
      - Internal API
      summary: Remove max device count limit
      parameters:
      - name: tenant_id
        description: Tenant ID.
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Limit information deleted.
        '500':
          $ref: ../common/responses.yaml#/components/responses/InternalServerError
  /api/internal/v1/devauth/tenants:
    post:
      operationId: DeviceAuth Internal Create Tenant
      tags:
      - Internal API
      summary: Provision a new tenant
      description: 'Sets up all tenant-related infrastructure, e.g. a migrated tenant''s
        database.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ../common/schemas.yaml#/components/schemas/NewTenant
      responses:
        '201':
          description: Tenant was successfully provisioned.
        '400':
          $ref: '../common/responses.yaml#/components/responses/InvalidRequestError'
        '500':
          $ref: ../common/responses.yaml#/components/responses/InternalServerError
  /api/internal/v1/devauth/tenants/{tid}/devices/{did}:
    delete:
      operationId: DeviceAuth Internal Delete Device
      tags:
      - Internal API
      summary: Delete a device from deviceauth service.
      parameters:
      - name: tid
        in: path
        required: true
        schema:
          type: string
      - name: did
        in: path
        required: true
        schema:
          type: string
      responses:
        '201':
          description: Device deleted successfully.
        '400':
          $ref: '../common/responses.yaml#/components/responses/InvalidRequestError'
        '500':
          $ref: ../common/responses.yaml#/components/responses/InternalServerError
  /api/internal/v1/devauth/tenants/{tid}/devices/{did}/external:
    put:
      operationId: DeviceAuth Internal Set external identity
      tags:
      - Internal API
      summary: Replace the external identity of a device.
      parameters:
      - name: tid
        in: path
        description: Tenant identifier.
        required: true
        schema:
          type: string
      - name: did
        in: path
        description: Device identifier.
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalDevice'
      responses:
        '204':
          description: Device identity updated successfully.
        '400':
          $ref: '../common/responses.yaml#/components/responses/InvalidRequestError'
        '500':
          $ref: ../common/responses.yaml#/components/responses/InternalServerError
  /api/internal/v1/devauth/tenants/{tid}/devices/{did}/status:
    get:
      operationId: DeviceAuth Internal Device Status
      tags:
      - Internal API
      summary: Get the status of a tenant's device
      description: 'Returns the overall status of the device, computed over the statuses
        of its various authsets.'
      parameters:
      - name: tid
        in: path
        description: Tenant identifier.
        required: true
        schema:
          type: string
      - name: did
        in: path
        description: Device identifier.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: ./management_v2.yaml#/components/schemas/Status
        '400':
          $ref: ../common/responses.yaml#/components/responses/InvalidRequestError
        '404':
          $ref: ../common/responses.yaml#/components/responses/NotFound
        '500':
          $ref: ../common/responses.yaml#/components/responses/InternalServerError
  /api/internal/v1/devauth/tenants/{tid}/devices:
    get:
      operationId: DeviceAuth Internal List Devices
      tags:
      - Internal API
      summary: Get a list of tenant's devices.
      description: 'Provides a list of tenant''s devices, sorted by creation date,
        with optional device status filter.'
      parameters:
      - name: tid
        in: path
        description: Tenant identifier.
        required: true
        schema:
          type: string
      - name: status
        in: query
        description: 'Device status filter. If not specified, all devices are listed.'
        required: false
        schema:
          type: string
          enum:
          - pending
          - accepted
          - rejected
          - preauthorized
          - noauth
      - name: id
        in: query
        description: Device ID filter. Can be repeated to query a set of devices.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: Results page number.
        required: false
        schema:
          type: integer
          default: 1
      - name: per_page
        in: query
        description: Maximum number of results per page.
        required: false
        schema:
          type: integer
          default: 20
          maximum: 500
      responses:
        '200':
          description: An array of devices.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./management_v2.yaml#/components/schemas/Device
          headers:
            Link:
              description: Standard header, we support 'first', 'next', and 'prev'.
              schema:
                type: string
        '400':
          $ref: ../common/responses.yaml#/components/responses/InvalidRequestError
        '500':
          $ref: ../common/responses.yaml#/components/responses/InternalServerError
  /api/internal/v1/devauth/tenants/{tid}/devices/count:
    get:
      operationId: DeviceAuth Internal Count Devices
      summary: Count number of devices, optionally filtered by status.
      tags:
      - Internal API
      parameters:
      - name: tid
        in: path
        description: Tenant identifier.
        required: true
        schema:
          type: string
      - name: status
        in: query
        description: 'Device status filter, one of ''pending'', ''accepted'', ''rejected'',
          ''noauth''. Default is ''all devices''.'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Device count.
          content:
            application/json:
              schema:
                $ref: ./management_v2.yaml#/components/schemas/Count
        '400':
          $ref: ../common/responses.yaml#/components/responses/InvalidRequestError
        '500':
          $ref: ../common/responses.yaml#/components/responses/InternalServerError
components:
  schemas:
    ExternalDevice:
      type: object
      description: External device descriptor
      properties:
        id:
          type: string
          description: ID assigned by external provider
        name:
          type: string
          description: Name of the device
        provider:
          type: string
          description: Name of the external provider
        id_data:
          type: string
          description: Optional custom ID data
      required:
      - id
      - name
      - provider
